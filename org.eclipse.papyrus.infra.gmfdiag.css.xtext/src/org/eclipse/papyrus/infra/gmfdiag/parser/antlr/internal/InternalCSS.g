/*
* generated by Xtext
*/
grammar InternalCSS;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.papyrus.infra.gmfdiag.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.papyrus.infra.gmfdiag.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.papyrus.infra.gmfdiag.services.CSSGrammarAccess;

}

@parser::members {

 	private CSSGrammarAccess grammarAccess;
 	
    public InternalCSSParser(TokenStream input, CSSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Stylesheet";	
   	}
   	
   	@Override
   	protected CSSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleStylesheet
entryRuleStylesheet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStylesheetRule()); }
	 iv_ruleStylesheet=ruleStylesheet 
	 { $current=$iv_ruleStylesheet.current; } 
	 EOF 
;

// Rule Stylesheet
ruleStylesheet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@charset ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0());
    }
(
(
		lv_charset_1_0=RULE_STRING
		{
			newLeafNode(lv_charset_1_0, grammarAccess.getStylesheetAccess().getCharsetSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStylesheetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"charset",
        		lv_charset_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2());
    }
)?(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_1_0()); 
    }

    |this_CDO_4=RULE_CDO
    { 
    newLeafNode(this_CDO_4, grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_1_1()); 
    }

    |this_CDC_5=RULE_CDC
    { 
    newLeafNode(this_CDC_5, grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_1_2()); 
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getImportsImportParserRuleCall_2_0_0()); 
	    }
		lv_imports_6_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_6_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_CDO_7=RULE_CDO
    { 
    newLeafNode(this_CDO_7, grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_2_1_0_0()); 
    }
(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_0_1()); 
    }
)*)
    |(this_CDC_9=RULE_CDC
    { 
    newLeafNode(this_CDC_9, grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_2_1_1_0()); 
    }
(this_WS_10=RULE_WS
    { 
    newLeafNode(this_WS_10, grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_1_1()); 
    }
)*))*)*((
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getContentsContentParserRuleCall_3_0_0()); 
	    }
		lv_contents_11_0=ruleContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_11_0, 
        		"Content");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_CDO_12=RULE_CDO
    { 
    newLeafNode(this_CDO_12, grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_3_1_0_0()); 
    }
(this_WS_13=RULE_WS
    { 
    newLeafNode(this_WS_13, grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_0_1()); 
    }
)*)
    |(this_CDC_14=RULE_CDC
    { 
    newLeafNode(this_CDC_14, grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_3_1_1_0()); 
    }
(this_WS_15=RULE_WS
    { 
    newLeafNode(this_WS_15, grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_1_1()); 
    }
)*))*)*)
;





// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	 iv_ruleContent=ruleContent 
	 { $current=$iv_ruleContent.current; } 
	 EOF 
;

// Rule Content
ruleContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContentAccess().getRulesetParserRuleCall_0()); 
    }
    this_Ruleset_0=ruleRuleset
    { 
        $current = $this_Ruleset_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContentAccess().getMediaParserRuleCall_1()); 
    }
    this_Media_1=ruleMedia
    { 
        $current = $this_Media_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContentAccess().getPageParserRuleCall_2()); 
    }
    this_Page_2=rulePage
    { 
        $current = $this_Page_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(((this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getImportAccess().getWSTerminalRuleCall_1_0_0()); 
    }
)*(
(
		lv_string_2_0=RULE_STRING
		{
			newLeafNode(lv_string_2_0, grammarAccess.getImportAccess().getStringSTRINGTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_2_0, 
        		"STRING");
	    }

)
))
    |(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getImportAccess().getWSTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getUriUriParserRuleCall_1_1_1_0()); 
	    }
		lv_uri_4_0=ruleUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"uri",
        		lv_uri_4_0, 
        		"Uri");
	        afterParserOrEnumRuleCall();
	    }

)
)))(this_WS_5=RULE_WS
    { 
    newLeafNode(this_WS_5, grammarAccess.getImportAccess().getWSTerminalRuleCall_2()); 
    }
)*((
(
		lv_media_6_0=RULE_ID
		{
			newLeafNode(lv_media_6_0, grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_6_0, 
        		"ID");
	    }

)
)(this_WS_7=RULE_WS
    { 
    newLeafNode(this_WS_7, grammarAccess.getImportAccess().getWSTerminalRuleCall_3_1()); 
    }
)*(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getImportAccess().getCommaKeyword_3_2_0());
    }
(this_WS_9=RULE_WS
    { 
    newLeafNode(this_WS_9, grammarAccess.getImportAccess().getWSTerminalRuleCall_3_2_1()); 
    }
)*(
(
		lv_media_10_0=RULE_ID
		{
			newLeafNode(lv_media_10_0, grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_10_0, 
        		"ID");
	    }

)
))*)?	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getImportAccess().getSemicolonKeyword_4());
    }
(this_WS_12=RULE_WS
    { 
    newLeafNode(this_WS_12, grammarAccess.getImportAccess().getWSTerminalRuleCall_5()); 
    }
)*)
;





// Entry rule entryRuleMedia
entryRuleMedia returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMediaRule()); }
	 iv_ruleMedia=ruleMedia 
	 { $current=$iv_ruleMedia.current; } 
	 EOF 
;

// Rule Media
ruleMedia returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@media' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMediaAccess().getMediaKeyword_0());
    }
this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getMediaAccess().getWSTerminalRuleCall_1()); 
    }
(
(
		lv_media_2_0=RULE_ID
		{
			newLeafNode(lv_media_2_0, grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_2_0, 
        		"ID");
	    }

)
)(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getMediaAccess().getWSTerminalRuleCall_3()); 
    }
)*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMediaAccess().getCommaKeyword_4_0());
    }
(this_WS_5=RULE_WS
    { 
    newLeafNode(this_WS_5, grammarAccess.getMediaAccess().getWSTerminalRuleCall_4_1()); 
    }
)*(
(
		lv_media_6_0=RULE_ID
		{
			newLeafNode(lv_media_6_0, grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_6_0, 
        		"ID");
	    }

)
))*	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_5());
    }
(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getMediaAccess().getWSTerminalRuleCall_6()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaAccess().getRulesRulesetParserRuleCall_7_0()); 
	    }
		lv_rules_9_0=ruleRuleset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_9_0, 
        		"Ruleset");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_8());
    }
(this_WS_11=RULE_WS
    { 
    newLeafNode(this_WS_11, grammarAccess.getMediaAccess().getWSTerminalRuleCall_9()); 
    }
)*)
;





// Entry rule entryRulePage
entryRulePage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	 iv_rulePage=rulePage 
	 { $current=$iv_rulePage.current; } 
	 EOF 
;

// Rule Page
rulePage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPageAccess().getPageAction_0(),
            $current);
    }
)	otherlv_1='@page' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPageAccess().getPageKeyword_1());
    }
(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getPageAccess().getWSTerminalRuleCall_2()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getPseudoPseudoPageParserRuleCall_3_0()); 
	    }
		lv_pseudo_3_0=rulePseudoPage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		set(
       			$current, 
       			"pseudo",
        		lv_pseudo_3_0, 
        		"PseudoPage");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4());
    }
(this_WS_5=RULE_WS
    { 
    newLeafNode(this_WS_5, grammarAccess.getPageAccess().getWSTerminalRuleCall_5()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_6_0()); 
	    }
		lv_declarations_6_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_6_0, 
        		"Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPageAccess().getSemicolonKeyword_7_0());
    }
(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getPageAccess().getWSTerminalRuleCall_7_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_7_2_0()); 
	    }
		lv_declarations_9_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_9_0, 
        		"Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPageAccess().getRightCurlyBracketKeyword_8());
    }
(this_WS_11=RULE_WS
    { 
    newLeafNode(this_WS_11, grammarAccess.getPageAccess().getWSTerminalRuleCall_9()); 
    }
)*)
;





// Entry rule entryRulePseudoPage
entryRulePseudoPage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoPageRule()); }
	 iv_rulePseudoPage=rulePseudoPage 
	 { $current=$iv_rulePseudoPage.current; } 
	 EOF 
;

// Rule PseudoPage
rulePseudoPage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPseudoPageAccess().getColonKeyword_0());
    }
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getPseudoPageAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoPageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getPseudoPageAccess().getWSTerminalRuleCall_2()); 
    }
)*)
;





// Entry rule entryRuleRuleset
entryRuleRuleset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRulesetRule()); }
	 iv_ruleRuleset=ruleRuleset 
	 { $current=$iv_ruleRuleset.current; } 
	 EOF 
;

// Rule Ruleset
ruleRuleset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); 
	    }
		lv_selectors_0_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_0_0, 
        		"Selector");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRulesetAccess().getCommaKeyword_1_0());
    }
(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); 
	    }
		lv_selectors_3_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_3_0, 
        		"Selector");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2());
    }
(this_WS_5=RULE_WS
    { 
    newLeafNode(this_WS_5, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_4_0()); 
	    }
		lv_properties_6_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_6_0, 
        		"Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRulesetAccess().getSemicolonKeyword_5_0());
    }
(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_5_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_5_2_0()); 
	    }
		lv_properties_9_0=ruleDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_9_0, 
        		"Declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_6());
    }
(this_WS_11=RULE_WS
    { 
    newLeafNode(this_WS_11, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_7()); 
    }
)*)
;





// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	 iv_ruleSelector=ruleSelector 
	 { $current=$iv_ruleSelector.current; } 
	 EOF 
;

// Rule Selector
ruleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getSelectorAccess().getSimpleSelectorParserRuleCall_0_0()); 
    }
    this_SimpleSelector_0=ruleSimpleSelector
    { 
        $current = $this_SimpleSelector_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getSelectorAccess().getWSTerminalRuleCall_0_1()); 
    }
)*)
    |
    { 
        newCompositeNode(grammarAccess.getSelectorAccess().getCompositeSelectorParserRuleCall_1()); 
    }
    this_CompositeSelector_2=ruleCompositeSelector
    { 
        $current = $this_CompositeSelector_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompositeSelector
entryRuleCompositeSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeSelectorRule()); }
	 iv_ruleCompositeSelector=ruleCompositeSelector 
	 { $current=$iv_ruleCompositeSelector.current; } 
	 EOF 
;

// Rule CompositeSelector
ruleCompositeSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeSelectorAccess().getLeftSimpleSelectorParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleSimpleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeSelectorRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"SimpleSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_0()); 
    }
)+
    |((this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_1_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0()); 
	    }
		lv_combinator_3_0=ruleCombinator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeSelectorRule());
	        }
       		set(
       			$current, 
       			"combinator",
        		lv_combinator_3_0, 
        		"Combinator");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeSelectorAccess().getRightSelectorParserRuleCall_2_0()); 
	    }
		lv_right_4_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeSelectorRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Selector");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleSelectorRule()); }
	 iv_ruleSimpleSelector=ruleSimpleSelector 
	 { $current=$iv_ruleSimpleSelector.current; } 
	 EOF 
;

// Rule SimpleSelector
ruleSimpleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_elementName_0_1=RULE_ID
		{
			newLeafNode(lv_elementName_0_1, grammarAccess.getSimpleSelectorAccess().getElementNameIDTerminalRuleCall_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementName",
        		lv_elementName_0_1, 
        		"ID");
	    }

    |		lv_elementName_0_2=	'*' 
    {
        newLeafNode(lv_elementName_0_2, grammarAccess.getSimpleSelectorAccess().getElementNameAsteriskKeyword_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleSelectorRule());
	        }
       		setWithLastConsumed($current, "elementName", lv_elementName_0_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_0_1_0()); 
	    }
		lv_condition_1_0=ruleSelectorCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		add(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"SelectorCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_1_0()); 
	    }
		lv_condition_2_0=ruleSelectorCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		add(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"SelectorCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSelectorCondition
entryRuleSelectorCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectorConditionRule()); }
	 iv_ruleSelectorCondition=ruleSelectorCondition 
	 { $current=$iv_ruleSelectorCondition.current; } 
	 EOF 
;

// Rule SelectorCondition
ruleSelectorCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectorConditionAccess().getCSSIdParserRuleCall_0()); 
    }
    this_CSSId_0=ruleCSSId
    { 
        $current = $this_CSSId_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSelectorConditionAccess().getClassParserRuleCall_1()); 
    }
    this_Class_1=ruleClass
    { 
        $current = $this_Class_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSelectorConditionAccess().getAttributeParserRuleCall_2()); 
    }
    this_Attribute_2=ruleAttribute
    { 
        $current = $this_Attribute_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSelectorConditionAccess().getPseudoParserRuleCall_3()); 
    }
    this_Pseudo_3=rulePseudo
    { 
        $current = $this_Pseudo_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCombinator
entryRuleCombinator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCombinatorRule()); }
	 iv_ruleCombinator=ruleCombinator 
	 { $current=$iv_ruleCombinator.current; } 
	 EOF 
;

// Rule Combinator
ruleCombinator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCombinatorAccess().getKindKINDEnumRuleCall_0_0()); 
	    }
		lv_kind_0_0=ruleKIND		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCombinatorRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_0_0, 
        		"KIND");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); 
    }
)*)
;





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=RULE_ID
		{
			newLeafNode(lv_property_0_0, grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"property",
        		lv_property_0_0, 
        		"ID");
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_1()); 
    }
)*	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getColonKeyword_2());
    }
(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getExpressionExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_important_5_0=RULE_T_IMPORTANT
		{
			newLeafNode(lv_important_5_0, grammarAccess.getDeclarationAccess().getImportantT_IMPORTANTTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"important",
        		true, 
        		"T_IMPORTANT");
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_5_1()); 
    }
)*)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getTermsTermParserRuleCall_0_0()); 
	    }
		lv_terms_0_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"terms",
        		lv_terms_0_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSubtermsSubtermParserRuleCall_1_0()); 
	    }
		lv_subterms_1_0=ruleSubterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"subterms",
        		lv_subterms_1_0, 
        		"Subterm");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubterm
entryRuleSubterm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubtermRule()); }
	 iv_ruleSubterm=ruleSubterm 
	 { $current=$iv_ruleSubterm.current; } 
	 EOF 
;

// Rule Subterm
ruleSubterm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubtermAccess().getOperatorOperatorParserRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubtermRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubtermAccess().getTermTermParserRuleCall_1_0()); 
	    }
		lv_term_1_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubtermRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getTermAccess().getNumberParserRuleCall_0_0()); 
    }
    this_Number_0=ruleNumber
    { 
        $current = $this_Number_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getPercentageParserRuleCall_0_1()); 
    }
    this_Percentage_1=rulePercentage
    { 
        $current = $this_Percentage_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getLengthParserRuleCall_0_2()); 
    }
    this_Length_2=ruleLength
    { 
        $current = $this_Length_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getEmsParserRuleCall_0_3()); 
    }
    this_Ems_3=ruleEms
    { 
        $current = $this_Ems_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getExsParserRuleCall_0_4()); 
    }
    this_Exs_4=ruleExs
    { 
        $current = $this_Exs_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getAngleParserRuleCall_0_5()); 
    }
    this_Angle_5=ruleAngle
    { 
        $current = $this_Angle_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getTimeParserRuleCall_0_6()); 
    }
    this_Time_6=ruleTime
    { 
        $current = $this_Time_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getFrequencyParserRuleCall_0_7()); 
    }
    this_Frequency_7=ruleFrequency
    { 
        $current = $this_Frequency_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getNameParserRuleCall_0_8()); 
    }
    this_Name_8=ruleName
    { 
        $current = $this_Name_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getStringValueParserRuleCall_0_9()); 
    }
    this_StringValue_9=ruleStringValue
    { 
        $current = $this_StringValue_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getUriParserRuleCall_0_10()); 
    }
    this_Uri_10=ruleUri
    { 
        $current = $this_Uri_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getHexColorParserRuleCall_0_11()); 
    }
    this_HexColor_11=ruleHexColor
    { 
        $current = $this_HexColor_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTermAccess().getFunctionParserRuleCall_0_12()); 
    }
    this_Function_12=ruleFunction
    { 
        $current = $this_Function_12.current; 
        afterParserOrEnumRuleCall();
    }
)(this_WS_13=RULE_WS
    { 
    newLeafNode(this_WS_13, grammarAccess.getTermAccess().getWSTerminalRuleCall_1()); 
    }
)*)
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
    }
(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getFunctionAccess().getWSTerminalRuleCall_2()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_3_0()); 
	    }
		lv_args_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_ID
		{
			newLeafNode(lv_value_0_0, grammarAccess.getNameAccess().getValueIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current; } 
	 EOF 
;

// Rule Number
ruleNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getNumberAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
))
;





// Entry rule entryRulePercentage
entryRulePercentage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPercentageRule()); }
	 iv_rulePercentage=rulePercentage 
	 { $current=$iv_rulePercentage.current; } 
	 EOF 
;

// Rule Percentage
rulePercentage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPercentageAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPercentageRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPercentageAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPercentageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_PC_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getPercentageAccess().getUnitPC_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPercentageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"PC_UNIT");
	    }

)
))
;





// Entry rule entryRuleLength
entryRuleLength returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLengthRule()); }
	 iv_ruleLength=ruleLength 
	 { $current=$iv_ruleLength.current; } 
	 EOF 
;

// Rule Length
ruleLength returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLengthAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLengthRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getLengthAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLengthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_LEN_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getLengthAccess().getUnitLEN_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLengthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"LEN_UNIT");
	    }

)
))
;





// Entry rule entryRuleEms
entryRuleEms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmsRule()); }
	 iv_ruleEms=ruleEms 
	 { $current=$iv_ruleEms.current; } 
	 EOF 
;

// Rule Ems
ruleEms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEmsAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmsRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getEmsAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_EM_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getEmsAccess().getUnitEM_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"EM_UNIT");
	    }

)
))
;





// Entry rule entryRuleExs
entryRuleExs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExsRule()); }
	 iv_ruleExs=ruleExs 
	 { $current=$iv_ruleExs.current; } 
	 EOF 
;

// Rule Exs
ruleExs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExsAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExsRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getExsAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_EX_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getExsAccess().getUnitEX_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"EX_UNIT");
	    }

)
))
;





// Entry rule entryRuleAngle
entryRuleAngle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAngleRule()); }
	 iv_ruleAngle=ruleAngle 
	 { $current=$iv_ruleAngle.current; } 
	 EOF 
;

// Rule Angle
ruleAngle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAngleAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAngleRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getAngleAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAngleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_ANGLE_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getAngleAccess().getUnitANGLE_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAngleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"ANGLE_UNIT");
	    }

)
))
;





// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	 iv_ruleTime=ruleTime 
	 { $current=$iv_ruleTime.current; } 
	 EOF 
;

// Rule Time
ruleTime returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getTimeAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_TIME_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getTimeAccess().getUnitTIME_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"TIME_UNIT");
	    }

)
))
;





// Entry rule entryRuleFrequency
entryRuleFrequency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFrequencyRule()); }
	 iv_ruleFrequency=ruleFrequency 
	 { $current=$iv_ruleFrequency.current; } 
	 EOF 
;

// Rule Frequency
ruleFrequency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFrequencyAccess().getOpUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrequencyRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_1_0=RULE_T_NUM
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFrequencyAccess().getValueT_NUMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFrequencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"T_NUM");
	    }

)
)(
(
		lv_unit_2_0=RULE_FREQ_UNIT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getFrequencyAccess().getUnitFREQ_UNITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFrequencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"FREQ_UNIT");
	    }

)
))
;





// Entry rule entryRuleUri
entryRuleUri returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUriRule()); }
	 iv_ruleUri=ruleUri 
	 { $current=$iv_ruleUri.current; } 
	 EOF 
;

// Rule Uri
ruleUri returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='url(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUriAccess().getUrlKeyword_0());
    }
(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getUriAccess().getWSTerminalRuleCall_1()); 
    }
)?(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getUriAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUriRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getUriAccess().getWSTerminalRuleCall_3()); 
    }
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUriAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	 iv_ruleStringValue=ruleStringValue 
	 { $current=$iv_ruleStringValue.current; } 
	 EOF 
;

// Rule StringValue
ruleStringValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleHexColor
entryRuleHexColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHexColorRule()); }
	 iv_ruleHexColor=ruleHexColor 
	 { $current=$iv_ruleHexColor.current; } 
	 EOF 
;

// Rule HexColor
ruleHexColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_HASH
		{
			newLeafNode(lv_value_0_0, grammarAccess.getHexColorAccess().getValueHASHTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHexColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"HASH");
	    }

)
)
;





// Entry rule entryRuleOperator
entryRuleOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRule()); } 
	 iv_ruleOperator=ruleOperator 
	 { $current=$iv_ruleOperator.current.getText(); }  
	 EOF 
;

// Rule Operator
ruleOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorAccess().getSolidusKeyword_0_0()); 
    }
(    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    newLeafNode(this_WS_1, grammarAccess.getOperatorAccess().getWSTerminalRuleCall_0_1()); 
    }
)*)
    |(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorAccess().getCommaKeyword_1_0()); 
    }
(    this_WS_3=RULE_WS    {
		$current.merge(this_WS_3);
    }

    { 
    newLeafNode(this_WS_3, grammarAccess.getOperatorAccess().getWSTerminalRuleCall_1_1()); 
    }
)*))
    ;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_class_0_0=RULE_T_CLASS
		{
			newLeafNode(lv_class_0_0, grammarAccess.getClassAccess().getClassT_CLASSTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_0_0, 
        		"T_CLASS");
	    }

)
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_0());
    }
(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getAttributeAccess().getWSTerminalRuleCall_1()); 
    }
)*(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getAttributeAccess().getWSTerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"AttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	 iv_ruleAttributeValue=ruleAttributeValue 
	 { $current=$iv_ruleAttributeValue.current; } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeValueAccess().getOperatorATTRIBUTE_OPEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleATTRIBUTE_OP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeValueRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"ATTRIBUTE_OP");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_1()); 
    }
)*(
(
(
		lv_value_2_1=RULE_ID
		{
			newLeafNode(lv_value_2_1, grammarAccess.getAttributeValueAccess().getValueIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_1, 
        		"ID");
	    }

    |		lv_value_2_2=RULE_STRING
		{
			newLeafNode(lv_value_2_2, grammarAccess.getAttributeValueAccess().getValueSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_2, 
        		"STRING");
	    }

)

)
)(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_3()); 
    }
)*)
;





// Entry rule entryRulePseudo
entryRulePseudo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoRule()); }
	 iv_rulePseudo=rulePseudo 
	 { $current=$iv_rulePseudo.current; } 
	 EOF 
;

// Rule Pseudo
rulePseudo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPseudoAccess().getColonKeyword_0());
    }
((
(
		lv_pseudo_1_0=RULE_ID
		{
			newLeafNode(lv_pseudo_1_0, grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pseudo",
        		lv_pseudo_1_0, 
        		"ID");
	    }

)
)
    |((
(
		lv_pseudo_2_0=RULE_ID
		{
			newLeafNode(lv_pseudo_2_0, grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pseudo",
        		lv_pseudo_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPseudoAccess().getLeftParenthesisKeyword_1_1_1());
    }
(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_2()); 
    }
)*((
(
		lv_args_5_0=RULE_ID
		{
			newLeafNode(lv_args_5_0, grammarAccess.getPseudoAccess().getArgsIDTerminalRuleCall_1_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"ID");
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_3_1()); 
    }
)*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPseudoAccess().getRightParenthesisKeyword_1_1_4());
    }
)))
;





// Entry rule entryRuleCSSId
entryRuleCSSId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSIdRule()); }
	 iv_ruleCSSId=ruleCSSId 
	 { $current=$iv_ruleCSSId.current; } 
	 EOF 
;

// Rule CSSId
ruleCSSId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_HASH
		{
			newLeafNode(lv_value_0_0, grammarAccess.getCSSIdAccess().getValueHASHTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCSSIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"HASH");
	    }

)
)
;





// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOperatorRule()); }
	 iv_ruleUnaryOperator=ruleUnaryOperator 
	 { $current=$iv_ruleUnaryOperator.current; } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryOperatorAccess().getOperatorUNARYEnumRuleCall_0()); 
	    }
		lv_operator_0_0=ruleUNARY		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryOperatorRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"UNARY");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Rule UNARY
ruleUNARY returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='-' 
	{
        $current = grammarAccess.getUNARYAccess().getNEGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUNARYAccess().getNEGEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='+' 
	{
        $current = grammarAccess.getUNARYAccess().getPLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUNARYAccess().getPLUSEnumLiteralDeclaration_1()); 
    }
));



// Rule KIND
ruleKIND returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='>' 
	{
        $current = grammarAccess.getKINDAccess().getFIRST_CHILDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getKINDAccess().getFIRST_CHILDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='+' 
	{
        $current = grammarAccess.getKINDAccess().getSIBLINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getKINDAccess().getSIBLINGEnumLiteralDeclaration_1()); 
    }
));



// Rule ATTRIBUTE_OP
ruleATTRIBUTE_OP returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='=' 
	{
        $current = grammarAccess.getATTRIBUTE_OPAccess().getEQUALSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getATTRIBUTE_OPAccess().getEQUALSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='~=' 
	{
        $current = grammarAccess.getATTRIBUTE_OPAccess().getCONTAINSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getATTRIBUTE_OPAccess().getCONTAINSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='!=' 
	{
        $current = grammarAccess.getATTRIBUTE_OPAccess().getUNEQUALSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getATTRIBUTE_OPAccess().getUNEQUALSEnumLiteralDeclaration_2()); 
    }
));



RULE_HASH : '#' ('A'..'Z'|'a'..'z'|'0'..'9')+;

RULE_T_CLASS : '.' RULE_ID;

RULE_T_IMPORTANT : '!important';

RULE_PC_UNIT : '%';

RULE_LEN_UNIT : ('px'|'cm'|'mm'|'in'|'pt'|'pc');

RULE_EM_UNIT : 'em';

RULE_EX_UNIT : 'ex';

RULE_ANGLE_UNIT : ('deg'|'rad'|'grad');

RULE_TIME_UNIT : ('s'|'ms');

RULE_FREQ_UNIT : ('hz'|'mhz');

RULE_T_NUM : (('0'..'9')+|('0'..'9')* '.' ('0'..'9')+);

RULE_ID : '-'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_CDO : '<!--';

RULE_CDC : '-->';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


