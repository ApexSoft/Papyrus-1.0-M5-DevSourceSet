/*
* generated by Xtext
*/
grammar InternalCSS;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.papyrus.infra.gmfdiag.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.infra.gmfdiag.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.infra.gmfdiag.services.CSSGrammarAccess;

}

@parser::members {
 
 	private CSSGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CSSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStylesheet
entryRuleStylesheet 
:
{ before(grammarAccess.getStylesheetRule()); }
	 ruleStylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule Stylesheet
ruleStylesheet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStylesheetAccess().getGroup()); }
(rule__Stylesheet__Group__0)
{ after(grammarAccess.getStylesheetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContent
entryRuleContent 
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentAccess().getAlternatives()); }
(rule__Content__Alternatives)
{ after(grammarAccess.getContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMedia
entryRuleMedia 
:
{ before(grammarAccess.getMediaRule()); }
	 ruleMedia
{ after(grammarAccess.getMediaRule()); } 
	 EOF 
;

// Rule Media
ruleMedia
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediaAccess().getGroup()); }
(rule__Media__Group__0)
{ after(grammarAccess.getMediaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePage
entryRulePage 
:
{ before(grammarAccess.getPageRule()); }
	 rulePage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule Page
rulePage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoPage
entryRulePseudoPage 
:
{ before(grammarAccess.getPseudoPageRule()); }
	 rulePseudoPage
{ after(grammarAccess.getPseudoPageRule()); } 
	 EOF 
;

// Rule PseudoPage
rulePseudoPage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoPageAccess().getGroup()); }
(rule__PseudoPage__Group__0)
{ after(grammarAccess.getPseudoPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleset
entryRuleRuleset 
:
{ before(grammarAccess.getRulesetRule()); }
	 ruleRuleset
{ after(grammarAccess.getRulesetRule()); } 
	 EOF 
;

// Rule Ruleset
ruleRuleset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulesetAccess().getGroup()); }
(rule__Ruleset__Group__0)
{ after(grammarAccess.getRulesetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelector
entryRuleSelector 
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
(rule__Selector__Alternatives)
{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeSelector
entryRuleCompositeSelector 
:
{ before(grammarAccess.getCompositeSelectorRule()); }
	 ruleCompositeSelector
{ after(grammarAccess.getCompositeSelectorRule()); } 
	 EOF 
;

// Rule CompositeSelector
ruleCompositeSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeSelectorAccess().getGroup()); }
(rule__CompositeSelector__Group__0)
{ after(grammarAccess.getCompositeSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector 
:
{ before(grammarAccess.getSimpleSelectorRule()); }
	 ruleSimpleSelector
{ after(grammarAccess.getSimpleSelectorRule()); } 
	 EOF 
;

// Rule SimpleSelector
ruleSimpleSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleSelectorAccess().getAlternatives()); }
(rule__SimpleSelector__Alternatives)
{ after(grammarAccess.getSimpleSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectorCondition
entryRuleSelectorCondition 
:
{ before(grammarAccess.getSelectorConditionRule()); }
	 ruleSelectorCondition
{ after(grammarAccess.getSelectorConditionRule()); } 
	 EOF 
;

// Rule SelectorCondition
ruleSelectorCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorConditionAccess().getAlternatives()); }
(rule__SelectorCondition__Alternatives)
{ after(grammarAccess.getSelectorConditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCombinator
entryRuleCombinator 
:
{ before(grammarAccess.getCombinatorRule()); }
	 ruleCombinator
{ after(grammarAccess.getCombinatorRule()); } 
	 EOF 
;

// Rule Combinator
ruleCombinator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCombinatorAccess().getGroup()); }
(rule__Combinator__Group__0)
{ after(grammarAccess.getCombinatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubterm
entryRuleSubterm 
:
{ before(grammarAccess.getSubtermRule()); }
	 ruleSubterm
{ after(grammarAccess.getSubtermRule()); } 
	 EOF 
;

// Rule Subterm
ruleSubterm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubtermAccess().getGroup()); }
(rule__Subterm__Group__0)
{ after(grammarAccess.getSubtermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getValueAssignment()); }
(rule__Name__ValueAssignment)
{ after(grammarAccess.getNameAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getGroup()); }
(rule__Number__Group__0)
{ after(grammarAccess.getNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePercentage
entryRulePercentage 
:
{ before(grammarAccess.getPercentageRule()); }
	 rulePercentage
{ after(grammarAccess.getPercentageRule()); } 
	 EOF 
;

// Rule Percentage
rulePercentage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPercentageAccess().getGroup()); }
(rule__Percentage__Group__0)
{ after(grammarAccess.getPercentageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLength
entryRuleLength 
:
{ before(grammarAccess.getLengthRule()); }
	 ruleLength
{ after(grammarAccess.getLengthRule()); } 
	 EOF 
;

// Rule Length
ruleLength
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLengthAccess().getGroup()); }
(rule__Length__Group__0)
{ after(grammarAccess.getLengthAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEms
entryRuleEms 
:
{ before(grammarAccess.getEmsRule()); }
	 ruleEms
{ after(grammarAccess.getEmsRule()); } 
	 EOF 
;

// Rule Ems
ruleEms
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmsAccess().getGroup()); }
(rule__Ems__Group__0)
{ after(grammarAccess.getEmsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExs
entryRuleExs 
:
{ before(grammarAccess.getExsRule()); }
	 ruleExs
{ after(grammarAccess.getExsRule()); } 
	 EOF 
;

// Rule Exs
ruleExs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExsAccess().getGroup()); }
(rule__Exs__Group__0)
{ after(grammarAccess.getExsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAngle
entryRuleAngle 
:
{ before(grammarAccess.getAngleRule()); }
	 ruleAngle
{ after(grammarAccess.getAngleRule()); } 
	 EOF 
;

// Rule Angle
ruleAngle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAngleAccess().getGroup()); }
(rule__Angle__Group__0)
{ after(grammarAccess.getAngleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTime
entryRuleTime 
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeAccess().getGroup()); }
(rule__Time__Group__0)
{ after(grammarAccess.getTimeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFrequency
entryRuleFrequency 
:
{ before(grammarAccess.getFrequencyRule()); }
	 ruleFrequency
{ after(grammarAccess.getFrequencyRule()); } 
	 EOF 
;

// Rule Frequency
ruleFrequency
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFrequencyAccess().getGroup()); }
(rule__Frequency__Group__0)
{ after(grammarAccess.getFrequencyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUri
entryRuleUri 
:
{ before(grammarAccess.getUriRule()); }
	 ruleUri
{ after(grammarAccess.getUriRule()); } 
	 EOF 
;

// Rule Uri
ruleUri
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUriAccess().getGroup()); }
(rule__Uri__Group__0)
{ after(grammarAccess.getUriAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHexColor
entryRuleHexColor 
:
{ before(grammarAccess.getHexColorRule()); }
	 ruleHexColor
{ after(grammarAccess.getHexColorRule()); } 
	 EOF 
;

// Rule HexColor
ruleHexColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexColorAccess().getValueAssignment()); }
(rule__HexColor__ValueAssignment)
{ after(grammarAccess.getHexColorAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperator
entryRuleOperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getClassAssignment()); }
(rule__Class__ClassAssignment)
{ after(grammarAccess.getClassAccess().getClassAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeValue
entryRuleAttributeValue 
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeValueAccess().getGroup()); }
(rule__AttributeValue__Group__0)
{ after(grammarAccess.getAttributeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudo
entryRulePseudo 
:
{ before(grammarAccess.getPseudoRule()); }
	 rulePseudo
{ after(grammarAccess.getPseudoRule()); } 
	 EOF 
;

// Rule Pseudo
rulePseudo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoAccess().getGroup()); }
(rule__Pseudo__Group__0)
{ after(grammarAccess.getPseudoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSId
entryRuleCSSId 
:
{ before(grammarAccess.getCSSIdRule()); }
	 ruleCSSId
{ after(grammarAccess.getCSSIdRule()); } 
	 EOF 
;

// Rule CSSId
ruleCSSId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSIdAccess().getValueAssignment()); }
(rule__CSSId__ValueAssignment)
{ after(grammarAccess.getCSSIdAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator 
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperatorAccess().getOperatorAssignment()); }
(rule__UnaryOperator__OperatorAssignment)
{ after(grammarAccess.getUnaryOperatorAccess().getOperatorAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule UNARY
ruleUNARY
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARYAccess().getAlternatives()); }
(rule__UNARY__Alternatives)
{ after(grammarAccess.getUNARYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule KIND
ruleKIND
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKINDAccess().getAlternatives()); }
(rule__KIND__Alternatives)
{ after(grammarAccess.getKINDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ATTRIBUTE_OP
ruleATTRIBUTE_OP
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATTRIBUTE_OPAccess().getAlternatives()); }
(rule__ATTRIBUTE_OP__Alternatives)
{ after(grammarAccess.getATTRIBUTE_OPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_1_0()); }
	RULE_WS
{ after(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_1_1()); }
	RULE_CDO
{ after(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_1_2()); }
	RULE_CDC
{ after(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_2_1_0()); }
(rule__Stylesheet__Group_2_1_0__0)
{ after(grammarAccess.getStylesheetAccess().getGroup_2_1_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getGroup_2_1_1()); }
(rule__Stylesheet__Group_2_1_1__0)
{ after(grammarAccess.getStylesheetAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_3_1_0()); }
(rule__Stylesheet__Group_3_1_0__0)
{ after(grammarAccess.getStylesheetAccess().getGroup_3_1_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getGroup_3_1_1()); }
(rule__Stylesheet__Group_3_1_1__0)
{ after(grammarAccess.getStylesheetAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getRulesetParserRuleCall_0()); }
	ruleRuleset
{ after(grammarAccess.getContentAccess().getRulesetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContentAccess().getMediaParserRuleCall_1()); }
	ruleMedia
{ after(grammarAccess.getContentAccess().getMediaParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getContentAccess().getPageParserRuleCall_2()); }
	rulePage
{ after(grammarAccess.getContentAccess().getPageParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_1_0()); }
(rule__Import__Group_1_0__0)
{ after(grammarAccess.getImportAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImportAccess().getGroup_1_1()); }
(rule__Import__Group_1_1__0)
{ after(grammarAccess.getImportAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_0()); }
(rule__Selector__Group_0__0)
{ after(grammarAccess.getSelectorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getCompositeSelectorParserRuleCall_1()); }
	ruleCompositeSelector
{ after(grammarAccess.getSelectorAccess().getCompositeSelectorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_0()); }
(	RULE_WS)
{ after(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_0()); }
)
(
{ before(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_0()); }
)
)

    |(
{ before(grammarAccess.getCompositeSelectorAccess().getGroup_1_1()); }
(rule__CompositeSelector__Group_1_1__0)
{ after(grammarAccess.getCompositeSelectorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getGroup_0()); }
(rule__SimpleSelector__Group_0__0)
{ after(grammarAccess.getSimpleSelectorAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_1()); }
(rule__SimpleSelector__ConditionAssignment_1)
{ after(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_1()); }
)
(
{ before(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_1()); }
(rule__SimpleSelector__ConditionAssignment_1)*
{ after(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__ElementNameAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getElementNameIDTerminalRuleCall_0_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getSimpleSelectorAccess().getElementNameIDTerminalRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimpleSelectorAccess().getElementNameAsteriskKeyword_0_0_0_1()); }

	'*' 

{ after(grammarAccess.getSimpleSelectorAccess().getElementNameAsteriskKeyword_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectorCondition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorConditionAccess().getCSSIdParserRuleCall_0()); }
	ruleCSSId
{ after(grammarAccess.getSelectorConditionAccess().getCSSIdParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSelectorConditionAccess().getClassParserRuleCall_1()); }
	ruleClass
{ after(grammarAccess.getSelectorConditionAccess().getClassParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSelectorConditionAccess().getAttributeParserRuleCall_2()); }
	ruleAttribute
{ after(grammarAccess.getSelectorConditionAccess().getAttributeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSelectorConditionAccess().getPseudoParserRuleCall_3()); }
	rulePseudo
{ after(grammarAccess.getSelectorConditionAccess().getPseudoParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNumberParserRuleCall_0_0()); }
	ruleNumber
{ after(grammarAccess.getTermAccess().getNumberParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getPercentageParserRuleCall_0_1()); }
	rulePercentage
{ after(grammarAccess.getTermAccess().getPercentageParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getLengthParserRuleCall_0_2()); }
	ruleLength
{ after(grammarAccess.getTermAccess().getLengthParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getTermAccess().getEmsParserRuleCall_0_3()); }
	ruleEms
{ after(grammarAccess.getTermAccess().getEmsParserRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getTermAccess().getExsParserRuleCall_0_4()); }
	ruleExs
{ after(grammarAccess.getTermAccess().getExsParserRuleCall_0_4()); }
)

    |(
{ before(grammarAccess.getTermAccess().getAngleParserRuleCall_0_5()); }
	ruleAngle
{ after(grammarAccess.getTermAccess().getAngleParserRuleCall_0_5()); }
)

    |(
{ before(grammarAccess.getTermAccess().getTimeParserRuleCall_0_6()); }
	ruleTime
{ after(grammarAccess.getTermAccess().getTimeParserRuleCall_0_6()); }
)

    |(
{ before(grammarAccess.getTermAccess().getFrequencyParserRuleCall_0_7()); }
	ruleFrequency
{ after(grammarAccess.getTermAccess().getFrequencyParserRuleCall_0_7()); }
)

    |(
{ before(grammarAccess.getTermAccess().getNameParserRuleCall_0_8()); }
	ruleName
{ after(grammarAccess.getTermAccess().getNameParserRuleCall_0_8()); }
)

    |(
{ before(grammarAccess.getTermAccess().getStringValueParserRuleCall_0_9()); }
	ruleStringValue
{ after(grammarAccess.getTermAccess().getStringValueParserRuleCall_0_9()); }
)

    |(
{ before(grammarAccess.getTermAccess().getUriParserRuleCall_0_10()); }
	ruleUri
{ after(grammarAccess.getTermAccess().getUriParserRuleCall_0_10()); }
)

    |(
{ before(grammarAccess.getTermAccess().getHexColorParserRuleCall_0_11()); }
	ruleHexColor
{ after(grammarAccess.getTermAccess().getHexColorParserRuleCall_0_11()); }
)

    |(
{ before(grammarAccess.getTermAccess().getFunctionParserRuleCall_0_12()); }
	ruleFunction
{ after(grammarAccess.getTermAccess().getFunctionParserRuleCall_0_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getGroup_0()); }
(rule__Operator__Group_0__0)
{ after(grammarAccess.getOperatorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getGroup_1()); }
(rule__Operator__Group_1__0)
{ after(grammarAccess.getOperatorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getAttributeValueAccess().getValueIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueAccess().getValueSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getAttributeValueAccess().getValueSTRINGTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getPseudoAssignment_1_0()); }
(rule__Pseudo__PseudoAssignment_1_0)
{ after(grammarAccess.getPseudoAccess().getPseudoAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getPseudoAccess().getGroup_1_1()); }
(rule__Pseudo__Group_1_1__0)
{ after(grammarAccess.getPseudoAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNARY__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARYAccess().getNEGEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUNARYAccess().getNEGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUNARYAccess().getPLUSEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getUNARYAccess().getPLUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KIND__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKINDAccess().getFIRST_CHILDEnumLiteralDeclaration_0()); }
(	'>' 
)
{ after(grammarAccess.getKINDAccess().getFIRST_CHILDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getKINDAccess().getSIBLINGEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getKINDAccess().getSIBLINGEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ATTRIBUTE_OP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATTRIBUTE_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getATTRIBUTE_OPAccess().getEQUALSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getATTRIBUTE_OPAccess().getCONTAINSEnumLiteralDeclaration_1()); }
(	'~=' 
)
{ after(grammarAccess.getATTRIBUTE_OPAccess().getCONTAINSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getATTRIBUTE_OPAccess().getUNEQUALSEnumLiteralDeclaration_2()); }
(	'!=' 
)
{ after(grammarAccess.getATTRIBUTE_OPAccess().getUNEQUALSEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__0__Impl
	rule__Stylesheet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_0()); }
(rule__Stylesheet__Group_0__0)?
{ after(grammarAccess.getStylesheetAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__1__Impl
	rule__Stylesheet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives_1()); }
(rule__Stylesheet__Alternatives_1)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__2__Impl
	rule__Stylesheet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_2()); }
(rule__Stylesheet__Group_2__0)*
{ after(grammarAccess.getStylesheetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_3()); }
(rule__Stylesheet__Group_3__0)*
{ after(grammarAccess.getStylesheetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Stylesheet__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__0__Impl
	rule__Stylesheet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0()); }

	'@charset ' 

{ after(grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__1__Impl
	rule__Stylesheet__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetAssignment_0_1()); }
(rule__Stylesheet__CharsetAssignment_0_1)
{ after(grammarAccess.getStylesheetAccess().getCharsetAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Stylesheet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2__0__Impl
	rule__Stylesheet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsAssignment_2_0()); }
(rule__Stylesheet__ImportsAssignment_2_0)
{ after(grammarAccess.getStylesheetAccess().getImportsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives_2_1()); }
(rule__Stylesheet__Alternatives_2_1)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stylesheet__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2_1_0__0__Impl
	rule__Stylesheet__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_2_1_0_0()); }
	RULE_CDO
{ after(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_0_1()); }
(	RULE_WS)*
{ after(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stylesheet__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2_1_1__0__Impl
	rule__Stylesheet__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_2_1_1_0()); }
	RULE_CDC
{ after(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_1_1()); }
(	RULE_WS)*
{ after(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stylesheet__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3__0__Impl
	rule__Stylesheet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getContentsAssignment_3_0()); }
(rule__Stylesheet__ContentsAssignment_3_0)
{ after(grammarAccess.getStylesheetAccess().getContentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives_3_1()); }
(rule__Stylesheet__Alternatives_3_1)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stylesheet__Group_3_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3_1_0__0__Impl
	rule__Stylesheet__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_3_1_0_0()); }
	RULE_CDO
{ after(grammarAccess.getStylesheetAccess().getCDOTerminalRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_3_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_0_1()); }
(	RULE_WS)*
{ after(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stylesheet__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3_1_1__0__Impl
	rule__Stylesheet__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_3_1_1_0()); }
	RULE_CDC
{ after(grammarAccess.getStylesheetAccess().getCDCTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_1_1()); }
(	RULE_WS)*
{ after(grammarAccess.getStylesheetAccess().getWSTerminalRuleCall_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'@import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getAlternatives_1()); }
(rule__Import__Alternatives_1)
{ after(grammarAccess.getImportAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_3()); }
(rule__Import__Group_3__0)?
{ after(grammarAccess.getImportAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__4__Impl
	rule__Import__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_0__0__Impl
	rule__Import__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_1_0_0()); }
(	RULE_WS)*
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getStringAssignment_1_0_1()); }
(rule__Import__StringAssignment_1_0_1)
{ after(grammarAccess.getImportAccess().getStringAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_1__0__Impl
	rule__Import__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_1_1_0()); }
	RULE_WS
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getUriAssignment_1_1_1()); }
(rule__Import__UriAssignment_1_1_1)
{ after(grammarAccess.getImportAccess().getUriAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3__0__Impl
	rule__Import__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMediaAssignment_3_0()); }
(rule__Import__MediaAssignment_3_0)
{ after(grammarAccess.getImportAccess().getMediaAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3__1__Impl
	rule__Import__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_3_1()); }
(	RULE_WS)*
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGroup_3_2()); }
(rule__Import__Group_3_2__0)*
{ after(grammarAccess.getImportAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3_2__0__Impl
	rule__Import__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getImportAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3_2__1__Impl
	rule__Import__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWSTerminalRuleCall_3_2_1()); }
(	RULE_WS)*
{ after(grammarAccess.getImportAccess().getWSTerminalRuleCall_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMediaAssignment_3_2_2()); }
(rule__Import__MediaAssignment_3_2_2)
{ after(grammarAccess.getImportAccess().getMediaAssignment_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Media__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__0__Impl
	rule__Media__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaKeyword_0()); }

	'@media' 

{ after(grammarAccess.getMediaAccess().getMediaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__1__Impl
	rule__Media__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
{ after(grammarAccess.getMediaAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__2__Impl
	rule__Media__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaAssignment_2()); }
(rule__Media__MediaAssignment_2)
{ after(grammarAccess.getMediaAccess().getMediaAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__3__Impl
	rule__Media__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getMediaAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__4__Impl
	rule__Media__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getGroup_4()); }
(rule__Media__Group_4__0)*
{ after(grammarAccess.getMediaAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__5__Impl
	rule__Media__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__6__Impl
	rule__Media__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getWSTerminalRuleCall_6()); }
(	RULE_WS)*
{ after(grammarAccess.getMediaAccess().getWSTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__7__Impl
	rule__Media__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesAssignment_7()); }
(rule__Media__RulesAssignment_7)*
{ after(grammarAccess.getMediaAccess().getRulesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__8__Impl
	rule__Media__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getWSTerminalRuleCall_9()); }
(	RULE_WS)*
{ after(grammarAccess.getMediaAccess().getWSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Media__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group_4__0__Impl
	rule__Media__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getMediaAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group_4__1__Impl
	rule__Media__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getWSTerminalRuleCall_4_1()); }
(	RULE_WS)*
{ after(grammarAccess.getMediaAccess().getWSTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaAssignment_4_2()); }
(rule__Media__MediaAssignment_4_2)
{ after(grammarAccess.getMediaAccess().getMediaAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageAction_0()); }
(

)
{ after(grammarAccess.getPageAccess().getPageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_1()); }

	'@page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPageAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoAssignment_3()); }
(rule__Page__PseudoAssignment_3)?
{ after(grammarAccess.getPageAccess().getPseudoAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__5__Impl
	rule__Page__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getPageAccess().getWSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__6__Impl
	rule__Page__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_6()); }
(rule__Page__DeclarationsAssignment_6)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__7__Impl
	rule__Page__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_7()); }
(rule__Page__Group_7__0)*
{ after(grammarAccess.getPageAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__8__Impl
	rule__Page__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getWSTerminalRuleCall_9()); }
(	RULE_WS)*
{ after(grammarAccess.getPageAccess().getWSTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Page__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_7__0__Impl
	rule__Page__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getSemicolonKeyword_7_0()); }

	';' 

{ after(grammarAccess.getPageAccess().getSemicolonKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_7__1__Impl
	rule__Page__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getWSTerminalRuleCall_7_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPageAccess().getWSTerminalRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_7_2()); }
(rule__Page__DeclarationsAssignment_7_2)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PseudoPage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoPage__Group__0__Impl
	rule__PseudoPage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoPageAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getPseudoPageAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoPage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoPage__Group__1__Impl
	rule__PseudoPage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoPageAccess().getIdAssignment_1()); }
(rule__PseudoPage__IdAssignment_1)
{ after(grammarAccess.getPseudoPageAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoPage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoPage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoPageAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPseudoPageAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ruleset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__0__Impl
	rule__Ruleset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
(rule__Ruleset__SelectorsAssignment_0)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__1__Impl
	rule__Ruleset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_1()); }
(rule__Ruleset__Group_1__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__2__Impl
	rule__Ruleset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__3__Impl
	rule__Ruleset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__4__Impl
	rule__Ruleset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getPropertiesAssignment_4()); }
(rule__Ruleset__PropertiesAssignment_4)?
{ after(grammarAccess.getRulesetAccess().getPropertiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__5__Impl
	rule__Ruleset__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_5()); }
(rule__Ruleset__Group_5__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__6__Impl
	rule__Ruleset__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_7()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Ruleset__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__0__Impl
	rule__Ruleset__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getRulesetAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__1__Impl
	rule__Ruleset__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_1()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
(rule__Ruleset__SelectorsAssignment_1_2)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ruleset__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_5__0__Impl
	rule__Ruleset__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_5_0()); }

	';' 

{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_5__1__Impl
	rule__Ruleset__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_5_1()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getPropertiesAssignment_5_2()); }
(rule__Ruleset__PropertiesAssignment_5_2)?
{ after(grammarAccess.getRulesetAccess().getPropertiesAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_0__0__Impl
	rule__Selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleSelectorParserRuleCall_0_0()); }
	ruleSimpleSelector
{ after(grammarAccess.getSelectorAccess().getSimpleSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_0_1()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeSelector__Group__0__Impl
	rule__CompositeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getLeftAssignment_0()); }
(rule__CompositeSelector__LeftAssignment_0)
{ after(grammarAccess.getCompositeSelectorAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeSelector__Group__1__Impl
	rule__CompositeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getAlternatives_1()); }
(rule__CompositeSelector__Alternatives_1)
{ after(grammarAccess.getCompositeSelectorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getRightAssignment_2()); }
(rule__CompositeSelector__RightAssignment_2)
{ after(grammarAccess.getCompositeSelectorAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompositeSelector__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeSelector__Group_1_1__0__Impl
	rule__CompositeSelector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getCompositeSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeSelector__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeSelector__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getCombinatorAssignment_1_1_1()); }
(rule__CompositeSelector__CombinatorAssignment_1_1_1)
{ after(grammarAccess.getCompositeSelectorAccess().getCombinatorAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleSelector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelector__Group_0__0__Impl
	rule__SimpleSelector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getElementNameAssignment_0_0()); }
(rule__SimpleSelector__ElementNameAssignment_0_0)
{ after(grammarAccess.getSimpleSelectorAccess().getElementNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_0_1()); }
(rule__SimpleSelector__ConditionAssignment_0_1)*
{ after(grammarAccess.getSimpleSelectorAccess().getConditionAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Combinator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__0__Impl
	rule__Combinator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getKindAssignment_0()); }
(rule__Combinator__KindAssignment_0)
{ after(grammarAccess.getCombinatorAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Combinator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getPropertyAssignment_0()); }
(rule__Declaration__PropertyAssignment_0)
{ after(grammarAccess.getDeclarationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
	rule__Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__4__Impl
	rule__Declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExpressionAssignment_4()); }
(rule__Declaration__ExpressionAssignment_4)
{ after(grammarAccess.getDeclarationAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_5()); }
(rule__Declaration__Group_5__0)?
{ after(grammarAccess.getDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Declaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_5__0__Impl
	rule__Declaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getImportantAssignment_5_0()); }
(rule__Declaration__ImportantAssignment_5_0)
{ after(grammarAccess.getDeclarationAccess().getImportantAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_5_1()); }
(	RULE_WS)*
{ after(grammarAccess.getDeclarationAccess().getWSTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermsAssignment_0()); }
(rule__Expression__TermsAssignment_0)
{ after(grammarAccess.getExpressionAccess().getTermsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSubtermsAssignment_1()); }
(rule__Expression__SubtermsAssignment_1)*
{ after(grammarAccess.getExpressionAccess().getSubtermsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subterm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subterm__Group__0__Impl
	rule__Subterm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subterm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtermAccess().getOperatorAssignment_0()); }
(rule__Subterm__OperatorAssignment_0)?
{ after(grammarAccess.getSubtermAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subterm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subterm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subterm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtermAccess().getTermAssignment_1()); }
(rule__Subterm__TermAssignment_1)
{ after(grammarAccess.getSubtermAccess().getTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getAlternatives_0()); }
(rule__Term__Alternatives_0)
{ after(grammarAccess.getTermAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getTermAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsAssignment_3()); }
(rule__Function__ArgsAssignment_3)
{ after(grammarAccess.getFunctionAccess().getArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Number__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getOpAssignment_0()); }
(rule__Number__OpAssignment_0)?
{ after(grammarAccess.getNumberAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
(rule__Number__ValueAssignment_1)
{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Percentage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Percentage__Group__0__Impl
	rule__Percentage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getOpAssignment_0()); }
(rule__Percentage__OpAssignment_0)?
{ after(grammarAccess.getPercentageAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Percentage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Percentage__Group__1__Impl
	rule__Percentage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getValueAssignment_1()); }
(rule__Percentage__ValueAssignment_1)
{ after(grammarAccess.getPercentageAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Percentage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Percentage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getUnitAssignment_2()); }
(rule__Percentage__UnitAssignment_2)
{ after(grammarAccess.getPercentageAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Length__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Length__Group__0__Impl
	rule__Length__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getOpAssignment_0()); }
(rule__Length__OpAssignment_0)?
{ after(grammarAccess.getLengthAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Length__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Length__Group__1__Impl
	rule__Length__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getValueAssignment_1()); }
(rule__Length__ValueAssignment_1)
{ after(grammarAccess.getLengthAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Length__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Length__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getUnitAssignment_2()); }
(rule__Length__UnitAssignment_2)
{ after(grammarAccess.getLengthAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ems__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ems__Group__0__Impl
	rule__Ems__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getOpAssignment_0()); }
(rule__Ems__OpAssignment_0)?
{ after(grammarAccess.getEmsAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ems__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ems__Group__1__Impl
	rule__Ems__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getValueAssignment_1()); }
(rule__Ems__ValueAssignment_1)
{ after(grammarAccess.getEmsAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ems__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ems__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getUnitAssignment_2()); }
(rule__Ems__UnitAssignment_2)
{ after(grammarAccess.getEmsAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exs__Group__0__Impl
	rule__Exs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getOpAssignment_0()); }
(rule__Exs__OpAssignment_0)?
{ after(grammarAccess.getExsAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exs__Group__1__Impl
	rule__Exs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getValueAssignment_1()); }
(rule__Exs__ValueAssignment_1)
{ after(grammarAccess.getExsAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exs__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getUnitAssignment_2()); }
(rule__Exs__UnitAssignment_2)
{ after(grammarAccess.getExsAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Angle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Angle__Group__0__Impl
	rule__Angle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getOpAssignment_0()); }
(rule__Angle__OpAssignment_0)?
{ after(grammarAccess.getAngleAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Angle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Angle__Group__1__Impl
	rule__Angle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getValueAssignment_1()); }
(rule__Angle__ValueAssignment_1)
{ after(grammarAccess.getAngleAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Angle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Angle__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getUnitAssignment_2()); }
(rule__Angle__UnitAssignment_2)
{ after(grammarAccess.getAngleAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Time__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getOpAssignment_0()); }
(rule__Time__OpAssignment_0)?
{ after(grammarAccess.getTimeAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getValueAssignment_1()); }
(rule__Time__ValueAssignment_1)
{ after(grammarAccess.getTimeAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getUnitAssignment_2()); }
(rule__Time__UnitAssignment_2)
{ after(grammarAccess.getTimeAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Frequency__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Frequency__Group__0__Impl
	rule__Frequency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getOpAssignment_0()); }
(rule__Frequency__OpAssignment_0)?
{ after(grammarAccess.getFrequencyAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Frequency__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Frequency__Group__1__Impl
	rule__Frequency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getValueAssignment_1()); }
(rule__Frequency__ValueAssignment_1)
{ after(grammarAccess.getFrequencyAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Frequency__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Frequency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getUnitAssignment_2()); }
(rule__Frequency__UnitAssignment_2)
{ after(grammarAccess.getFrequencyAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Uri__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uri__Group__0__Impl
	rule__Uri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getUrlKeyword_0()); }

	'url(' 

{ after(grammarAccess.getUriAccess().getUrlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uri__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uri__Group__1__Impl
	rule__Uri__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)?
{ after(grammarAccess.getUriAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uri__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uri__Group__2__Impl
	rule__Uri__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getValueAssignment_2()); }
(rule__Uri__ValueAssignment_2)
{ after(grammarAccess.getUriAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uri__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uri__Group__3__Impl
	rule__Uri__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)?
{ after(grammarAccess.getUriAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uri__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uri__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getUriAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Operator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator__Group_0__0__Impl
	rule__Operator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_0_0()); }

	'/' 

{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getWSTerminalRuleCall_0_1()); }
(	RULE_WS)*
{ after(grammarAccess.getOperatorAccess().getWSTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator__Group_1__0__Impl
	rule__Operator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOperatorAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getWSTerminalRuleCall_1_1()); }
(	RULE_WS)*
{ after(grammarAccess.getOperatorAccess().getWSTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getAttributeAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
(rule__Attribute__NameAssignment_2)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getAttributeAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueAssignment_4()); }
(rule__Attribute__ValueAssignment_4)?
{ after(grammarAccess.getAttributeAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValue__Group__0__Impl
	rule__AttributeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getOperatorAssignment_0()); }
(rule__AttributeValue__OperatorAssignment_0)
{ after(grammarAccess.getAttributeValueAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValue__Group__1__Impl
	rule__AttributeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValue__Group__2__Impl
	rule__AttributeValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
(rule__AttributeValue__ValueAssignment_2)
{ after(grammarAccess.getAttributeValueAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getAttributeValueAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pseudo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group__0__Impl
	rule__Pseudo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getPseudoAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getAlternatives_1()); }
(rule__Pseudo__Alternatives_1)
{ after(grammarAccess.getPseudoAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pseudo__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1__0__Impl
	rule__Pseudo__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getPseudoAssignment_1_1_0()); }
(rule__Pseudo__PseudoAssignment_1_1_0)
{ after(grammarAccess.getPseudoAccess().getPseudoAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1__1__Impl
	rule__Pseudo__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getLeftParenthesisKeyword_1_1_1()); }

	'(' 

{ after(grammarAccess.getPseudoAccess().getLeftParenthesisKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1__2__Impl
	rule__Pseudo__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_2()); }
(	RULE_WS)*
{ after(grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1__3__Impl
	rule__Pseudo__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getGroup_1_1_3()); }
(rule__Pseudo__Group_1_1_3__0)?
{ after(grammarAccess.getPseudoAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getRightParenthesisKeyword_1_1_4()); }

	')' 

{ after(grammarAccess.getPseudoAccess().getRightParenthesisKeyword_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Pseudo__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1_3__0__Impl
	rule__Pseudo__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getArgsAssignment_1_1_3_0()); }
(rule__Pseudo__ArgsAssignment_1_1_3_0)
{ after(grammarAccess.getPseudoAccess().getArgsAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_3_1()); }
(	RULE_WS)*
{ after(grammarAccess.getPseudoAccess().getWSTerminalRuleCall_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Stylesheet__CharsetAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getStylesheetAccess().getCharsetSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ImportsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsImportParserRuleCall_2_0_0()); }
	ruleImport{ after(grammarAccess.getStylesheetAccess().getImportsImportParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ContentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getContentsContentParserRuleCall_3_0_0()); }
	ruleContent{ after(grammarAccess.getStylesheetAccess().getContentsContentParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__StringAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getStringSTRINGTerminalRuleCall_1_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getStringSTRINGTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__UriAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getUriUriParserRuleCall_1_1_1_0()); }
	ruleUri{ after(grammarAccess.getImportAccess().getUriUriParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__MediaAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_0_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__MediaAssignment_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_2_2_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getMediaIDTerminalRuleCall_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__MediaAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__MediaAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_4_2_0()); }
	RULE_ID{ after(grammarAccess.getMediaAccess().getMediaIDTerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__RulesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesRulesetParserRuleCall_7_0()); }
	ruleRuleset{ after(grammarAccess.getMediaAccess().getRulesRulesetParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__PseudoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoPseudoPageParserRuleCall_3_0()); }
	rulePseudoPage{ after(grammarAccess.getPageAccess().getPseudoPseudoPageParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_6_0()); }
	ruleDeclaration{ after(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_7_2_0()); }
	ruleDeclaration{ after(grammarAccess.getPageAccess().getDeclarationsDeclarationParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoPage__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoPageAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPseudoPageAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	ruleSelector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
	ruleSelector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_4_0()); }
	ruleDeclaration{ after(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__PropertiesAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_5_2_0()); }
	ruleDeclaration{ after(grammarAccess.getRulesetAccess().getPropertiesDeclarationParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getLeftSimpleSelectorParserRuleCall_0_0()); }
	ruleSimpleSelector{ after(grammarAccess.getCompositeSelectorAccess().getLeftSimpleSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__CombinatorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0()); }
	ruleCombinator{ after(grammarAccess.getCompositeSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeSelector__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeSelectorAccess().getRightSelectorParserRuleCall_2_0()); }
	ruleSelector{ after(grammarAccess.getCompositeSelectorAccess().getRightSelectorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__ElementNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getElementNameAlternatives_0_0_0()); }
(rule__SimpleSelector__ElementNameAlternatives_0_0_0)
{ after(grammarAccess.getSimpleSelectorAccess().getElementNameAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__ConditionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_0_1_0()); }
	ruleSelectorCondition{ after(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelector__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_1_0()); }
	ruleSelectorCondition{ after(grammarAccess.getSimpleSelectorAccess().getConditionSelectorConditionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getKindKINDEnumRuleCall_0_0()); }
	ruleKIND{ after(grammarAccess.getCombinatorAccess().getKindKINDEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDeclarationAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ImportantAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getImportantT_IMPORTANTTerminalRuleCall_5_0_0()); }
	RULE_T_IMPORTANT{ after(grammarAccess.getDeclarationAccess().getImportantT_IMPORTANTTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TermsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTermsTermParserRuleCall_0_0()); }
	ruleTerm{ after(grammarAccess.getExpressionAccess().getTermsTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SubtermsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSubtermsSubtermParserRuleCall_1_0()); }
	ruleSubterm{ after(grammarAccess.getExpressionAccess().getSubtermsSubtermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subterm__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtermAccess().getOperatorOperatorParserRuleCall_0_0()); }
	ruleOperator{ after(grammarAccess.getSubtermAccess().getOperatorOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subterm__TermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtermAccess().getTermTermParserRuleCall_1_0()); }
	ruleTerm{ after(grammarAccess.getSubtermAccess().getTermTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getArgsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getValueIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getNameAccess().getValueIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getNumberAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getNumberAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getPercentageAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getPercentageAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Percentage__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPercentageAccess().getUnitPC_UNITTerminalRuleCall_2_0()); }
	RULE_PC_UNIT{ after(grammarAccess.getPercentageAccess().getUnitPC_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Length__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getLengthAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Length__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getLengthAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Length__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthAccess().getUnitLEN_UNITTerminalRuleCall_2_0()); }
	RULE_LEN_UNIT{ after(grammarAccess.getLengthAccess().getUnitLEN_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getEmsAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getEmsAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ems__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmsAccess().getUnitEM_UNITTerminalRuleCall_2_0()); }
	RULE_EM_UNIT{ after(grammarAccess.getEmsAccess().getUnitEM_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getExsAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getExsAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exs__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExsAccess().getUnitEX_UNITTerminalRuleCall_2_0()); }
	RULE_EX_UNIT{ after(grammarAccess.getExsAccess().getUnitEX_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getAngleAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getAngleAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Angle__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAngleAccess().getUnitANGLE_UNITTerminalRuleCall_2_0()); }
	RULE_ANGLE_UNIT{ after(grammarAccess.getAngleAccess().getUnitANGLE_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getTimeAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getTimeAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getUnitTIME_UNITTerminalRuleCall_2_0()); }
	RULE_TIME_UNIT{ after(grammarAccess.getTimeAccess().getUnitTIME_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getFrequencyAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getValueT_NUMTerminalRuleCall_1_0()); }
	RULE_T_NUM{ after(grammarAccess.getFrequencyAccess().getValueT_NUMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Frequency__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFrequencyAccess().getUnitFREQ_UNITTerminalRuleCall_2_0()); }
	RULE_FREQ_UNIT{ after(grammarAccess.getFrequencyAccess().getUnitFREQ_UNITTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uri__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getUriAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HexColor__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexColorAccess().getValueHASHTerminalRuleCall_0()); }
	RULE_HASH{ after(grammarAccess.getHexColorAccess().getValueHASHTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ClassAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassT_CLASSTerminalRuleCall_0()); }
	RULE_T_CLASS{ after(grammarAccess.getClassAccess().getClassT_CLASSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_4_0()); }
	ruleAttributeValue{ after(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getOperatorATTRIBUTE_OPEnumRuleCall_0_0()); }
	ruleATTRIBUTE_OP{ after(grammarAccess.getAttributeValueAccess().getOperatorATTRIBUTE_OPEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueAccess().getValueAlternatives_2_0()); }
(rule__AttributeValue__ValueAlternatives_2_0)
{ after(grammarAccess.getAttributeValueAccess().getValueAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__PseudoAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__PseudoAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_1_0_0()); }
	RULE_ID{ after(grammarAccess.getPseudoAccess().getPseudoIDTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo__ArgsAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoAccess().getArgsIDTerminalRuleCall_1_1_3_0_0()); }
	RULE_ID{ after(grammarAccess.getPseudoAccess().getArgsIDTerminalRuleCall_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSId__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSIdAccess().getValueHASHTerminalRuleCall_0()); }
	RULE_HASH{ after(grammarAccess.getCSSIdAccess().getValueHASHTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__OperatorAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getOperatorUNARYEnumRuleCall_0()); }
	ruleUNARY{ after(grammarAccess.getUnaryOperatorAccess().getOperatorUNARYEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HASH : '#' ('A'..'Z'|'a'..'z'|'0'..'9')+;

RULE_T_CLASS : '.' RULE_ID;

RULE_T_IMPORTANT : '!important';

RULE_PC_UNIT : '%';

RULE_LEN_UNIT : ('px'|'cm'|'mm'|'in'|'pt'|'pc');

RULE_EM_UNIT : 'em';

RULE_EX_UNIT : 'ex';

RULE_ANGLE_UNIT : ('deg'|'rad'|'grad');

RULE_TIME_UNIT : ('s'|'ms');

RULE_FREQ_UNIT : ('hz'|'mhz');

RULE_T_NUM : (('0'..'9')+|('0'..'9')* '.' ('0'..'9')+);

RULE_ID : '-'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_CDO : '<!--';

RULE_CDC : '-->';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


